{{ header }}
<style>
  #drop-files {
    position:relative;
    height: fit-content;
    background: rgba(0,0,0,0.1);
    border-radius: 10px;
    border: 4px dashed rgba(0,0,0,0.2);
    text-align: center;
  }

  #drop-files p {
    clear:none;
    padding:0;
    margin:0;
  }

  #uploaded-holder {
    display: none;
    position:relative;
    margin: 0 auto;
  }

  #dropped-files {
    display:block;
    margin: 0 auto;
    width: 950px;
  }

  #upload-button {
    z-index: 9999;
    display: none;
    margin: 20px 0;
  }

  .drop-button {
    display: block;
    position: absolute;
    z-index: 9999;
    padding: 5px;
    width: 100%;
    background: rgba(0,0,0,0.6);
    font-size: 1em;
    bottom: 0;
    text-align: center;
    text-decoration: none;
    font-weight: 700;
    color: #FFF;
  }

  #dropped-files .review-image-preview {
    position: relative;
    height: 200px;
    width: 300px;
    border: 4px solid #fff;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    background: #fff;
    float: left;
    border-radius: 4px;
    margin: 0 7px 7px 0;
    overflow: hidden;
  }

  #upload-button .ss-upload {
    font-size: 0.7em;
  }

  #upload-button a {
    text-decoration: none;
    color: #fff;
    font-weight: bold;
    box-shadow: 0 0 1000px 62px rgba(255, 255, 255, 1), inset 0 -35px 40px -10px #0A9FCA;
    font-size: 20px;
    padding: 10px 20px;
    background-color: #4bc1e3;
    border-radius: 10px;
  }

  #upload-button span {
    position:relative;
    text-align: center;
    background: white;
    border-radius: 10px;
    font-size: 1.1em;
    padding: 6px;
    margin-right: 8px;
  }
  #upload-button a:hover {
    box-shadow: 0 0 1000px 62px rgba(255, 255, 255, 1), inset 0 -5px 40px 0px #0A9FCA;
  }


  #dropped-files #upload-button .delete {
    padding: 7px 6px 4px 6px;
    border-radius: 100px;
    background: rgba(0,0,0,0.6);
    box-shadow: none;
    font-size: 1em;
    margin-left: 8px;
  }

  #dropped-files #upload-button .delete:hover {
    background: rgba(0,0,0,0.8);
  }

  #file-name-holder h1 {
    text-align: center;
    padding: 20px 0;
    font-size: 3em;
    margin: 0;
  }

  #uploaded-files {
    width:500px;
    list-style:none;
    margin:0 auto;
    padding: 10px;
    color: #545454;
  }

  #uploaded-files li {
    padding: 10px;
    border-bottom: 1px solid #eee;
    font-size: 1.5em;
    font-weight: bold;
    line-height: 25px;
    color: #545454;
  }

  #uploaded-files a {
    color: #1bacbf;
  }
  .product-block {
    display: flex;
    justify-content: flex-start;
    flex-direction: row;
    align-items: center;
    border: 1px solid #C7DDE5;
    border-radius: 5px;
    padding: 20px;
  }
  .product-block-info {
    display: flex;
    flex-direction: column;
  }
</style>
<div id="product-product" class="container">
  <ul class="breadcrumb">
    {% for breadcrumb in breadcrumbs %}
    <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
    {% endfor %}
  </ul>
  <div class="row">{{ column_left }}
    {% if column_left and column_right %}
    {% set class = 'col-sm-6' %}
    {% elseif column_left or column_right %}
    {% set class = 'col-sm-9' %}
    {% else %}
    {% set class = 'col-sm-12' %}
    {% endif %}
    <div id="content" class="{{ class }}">{{ content_top }}
      <h1>{{ text_your_review }}</h1>
      <div class="row">
        {% if column_left or column_right %}
          {% set class = 'col-sm-6' %}
        {% else %}
          {% set class = 'col-sm-8' %}
        {% endif %}
        <div class="{{ class }}">
          <div class="review-form">
            <div class="product-block">
              {% if thumb or images %}
                {% if thumb %}
                  <div><img src="{{ thumb }}" title="{{ heading_title }}" alt="{{ heading_title }}" /></div>
                {% endif %}
              {% endif %}
              <div class="product-block-info">
                <span style="font-weight: bold;">{{ heading_title }}</span>
                <span>1 шт ({{ weight }}{{ weight_unit }})</span>
              </div>
            </div>
            <form class="form-horizontal" id="form-review">
              <h2>{{ text_write }}</h2>
              {% if review_guest %}
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label" for="input-name">{{ entry_name }}</label>
                    <input type="text" name="name" value="{{ customer_name }}" id="input-name" class="form-control" />
                  </div>
                </div>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label" for="input-review">{{ entry_review }}</label>
                    <textarea name="text" rows="5" id="input-review" class="form-control"></textarea>
                    <div class="help-block">{{ text_note }}</div>
                  </div>
                </div>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <div class="review-image">
                      <div id="drop-files" ondragover="return false">
                        <input type="file" name="review-image" id="uploadbtn" accept=".jpg, .jpeg, .png"  multiple />
                        <p>{{ text_click_or_drag_n_drop }}</p>
                        <p>{{ text_max_images }}</p>
                      </div>
                      <div id="uploaded-holder">
                        <div id="dropped-files">
                          <div id="upload-button">
                            <span>0 {{ text_files }}</span>
                            <a href="#" class="delete">{{ button_delete_all }}</a>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="form-group required">
                  <div class="col-sm-12">
                    <label class="control-label">{{ entry_rating }}</label>
                    &nbsp;&nbsp;&nbsp; {{ entry_bad }}&nbsp;
                    <input type="radio" name="rating" value="1" />
                    &nbsp;
                    <input type="radio" name="rating" value="2" />
                    &nbsp;
                    <input type="radio" name="rating" value="3" />
                    &nbsp;
                    <input type="radio" name="rating" value="4" />
                    &nbsp;
                    <input type="radio" name="rating" value="5" />
                    &nbsp;{{ entry_good }}
                  </div>
                </div>
                <div class="form-group">
                  <div class="col-sm-12">
                    <label class="control-label">{{ entry_hide_customer_info }}</label>
                    <input type="checkbox" name="hidden_customer_info">
                  </div>
                </div>
                {{ captcha }}
                <div class="buttons clearfix">
                  <div class="pull-right">
                    <button type="button" id="button-review" data-loading-text="{{ text_loading }}" class="btn btn-primary">{{ button_continue }}</button>
                  </div>
                </div>
              {% else %}
                {{ text_login }}
              {% endif %}
            </form>
          </div>
        </div>
        {% if column_left or column_right %}
          {% set class = 'col-sm-6' %}
        {% else %}
          {% set class = 'col-sm-4' %}
        {% endif %}
        <div class="{{ class }}">
          <div style="padding: 15px; background-color: #F0F7FD;">
            <span>{{ text_delivery_review }}</span>
            <a href="#" class="btn btn-default">{{ button_leave_review_delivery }}</a>
          </div>
        </div>
      </div>

      {{ content_bottom }}</div>
    {{ column_right }}</div>
</div>
<script>
    $('#button-review').on('click', function() {
        $.ajax({
            url: 'index.php?route=product/product/write&product_id={{ product_id }}',
            type: 'post',
            dataType: 'json',
            data: $("#form-review").serialize(),
            beforeSend: function() {
                $('#button-review').button('loading');
            },
            complete: function() {
                $('#button-review').button('reset');
            },
            success: function(json) {
                $('.alert-dismissible').remove();

                if (json['error']) {
                    $('.review-form').after('<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + '</div>');
                }

                if (json['success']) {
                    if( typeof mainImagesFiles != 'undefined' && json['review_id'] ) {
                        // создадим объект данных формы
                        var dataImages = new FormData();

                        // заполняем объект данных файлами в подходящем для отправки формате
                        $.each( mainImagesFiles, function( i, file ){
                            dataImages.append( "file[" + i + "]", file.file );
                        });

                        console.log(dataImages.values())

                        // добавим переменную для идентификации запроса
                        dataImages.append( 'review_file_upload', 1 );
                        dataImages.append( 'review_id', json['review_id'] );

                        // AJAX запрос
                        $.ajax({
                            url         : 'index.php?route=product/product/writeImage&review_id=' + json['review_id'],
                            type        : 'POST', // важно!
                            data        : dataImages,
                            cache       : false,
                            dataType    : 'json',
                            // отключаем обработку передаваемых данных, пусть передаются как есть
                            processData : false,
                            // отключаем установку заголовка типа запроса. Так jQuery скажет серверу что это строковой запрос
                            contentType : false,
                            // функция успешного ответа сервера
                            success     : function( respond, status, jqXHR ) {

                                // ОК - файлы загружены
                                if( typeof respond.error === 'undefined' ) {
                                    $('#dropped-files #upload-button .delete').click()
                                }
                                // ошибка
                                else {
                                    console.log('ОШИБКА: ' + respond.data );
                                }
                            },
                            // функция ошибки ответа сервера
                            error: function( jqXHR, status, errorThrown ) {
                                console.log( 'ОШИБКА AJAX запроса: ' + status, jqXHR );
                            }

                        });
                    }

                    $('.review-form').after('<div class="alert alert-success alert-dismissible"><i class="fa fa-check-circle"></i> ' + json['success'] + '</div>');

                    $('input[name=\'name\']').val('');
                    $('textarea[name=\'text\']').val('');
                    $('input[name=\'rating\']:checked').prop('checked', false);
                }
            }
        });
    });
</script>
<script>
    var $ = jQuery.noConflict();

    var mainImagesFiles = []; // переменная. будет содержать данные файлов

    // // заполняем переменную данными, при изменении значения поля file
    // $('input[type=file]').on('change', function(){
    //     var fileIdCounter = 0;
    //
    //     for (var i = 0; i < this.files.length; i++) {
    //         fileIdCounter++;
    //         var file = this.files[i];
    //         var fileId = fileIdCounter;
    //
    //         mainImagesFiles.push({
    //             id: fileId,
    //             file: file
    //         });
    //     }
    // });

    $(document).ready(function() {
        // В dataTransfer помещаются изображения которые перетащили в область div
        jQuery.event.props.push('dataTransfer');

        // Максимальное количество загружаемых изображений за одни раз
        var maxFiles = 10;

        // Оповещение по умолчанию
        var errMessage = 0;

        // Кнопка выбора файлов
        var defaultUploadBtn = $('#uploadbtn');

        // Массив для всех изображений
        var dataArray = [];



        // Область информер о загруженных изображениях - скрыта
        $('#uploaded-files').hide();

        // Метод при падении файла в зону загрузки
        $('#drop-files').on('drop', function(e) {
            // Передаем в files все полученные изображения
            var files = e.dataTransfer.files;
            var fileIdCounter = 0;
            for (var i = 0; i < e.dataTransfer.files.length; i++) {
                fileIdCounter++;
                var file = e.dataTransfer.files[i];
                var fileId = fileIdCounter;

                mainImagesFiles.push({
                    id: fileId,
                    file: file
                });
            }
            // Проверяем на максимальное количество файлов
            if (files.length <= maxFiles) {
                // Передаем массив с файлами в функцию загрузки на предпросмотр
                loadInView(files);
            } else {
                alert('{{ text_u_cant_load_more }} '+maxFiles+' {{ text_images }}!');
                files.length = 0; return;
            }
        });

        // При нажатии на кнопку выбора файлов
        defaultUploadBtn.on('change', function() {
            // Заполняем массив выбранными изображениями
            var files = $(this)[0].files;
            var fileIdCounter = 0;

            for (var i = 0; i < $(this)[0].files.length; i++) {
                fileIdCounter++;
                var file = $(this)[0].files[i];
                var fileId = fileIdCounter;

                mainImagesFiles.push({
                    id: fileId,
                    file: file
                });
            }
            // Проверяем на максимальное количество файлов
            if (files.length <= maxFiles) {
                // Передаем массив с файлами в функцию загрузки на предпросмотр
                loadInView(files);
                // Очищаем инпут файл путем сброса формы
                $('#frm').each(function(){
                    this.reset();
                });

            } else {
                alert('{{ text_u_cant_load_more }} '+maxFiles+' {{ text_images }}!');
                files.length = 0;
            }
        });

        // Функция загрузки изображений на предросмотр
        function loadInView(files) {
            // Показываем обасть предпросмотра
            $('#uploaded-holder').show();

            // Для каждого файла
            $.each(files, function(index, file) {

                // Несколько оповещений при попытке загрузить не изображение
                if (!files[index].type.match('image.*')) {

                    if(errMessage == 0) {
                        $('#drop-files p').html('{{ error_only_image }}');
                        errMessage = 0;
                    }
                    return false;
                }

                // Проверяем количество загружаемых элементов
                if((dataArray.length+files.length) <= maxFiles) {
                    // показываем область с кнопками
                    $('#upload-button').css({'display' : 'block'});
                }
                else { alert('{{ text_u_cant_load_more }} '+maxFiles+' {{ text_images }}!'); return; }

                // Создаем новый экземпляра FileReader
                var fileReader = new FileReader();
                // Инициируем функцию FileReader
                fileReader.onload = (function(file) {

                    return function(e) {
                        // Помещаем URI изображения в массив
                        dataArray.push({name : file.name, value : this.result});
                        addImage((dataArray.length-1));
                    };

                })(files[index]);
                // Производим чтение картинки по URI
                fileReader.readAsDataURL(file);
            });
            return false;
        }

        // Процедура добавления эскизов на страницу
        function addImage(ind) {
            // Если индекс отрицательный значит выводим весь массив изображений
            if (ind < 0 ) {
                start = 0; end = dataArray.length;
            } else {
                // иначе только определенное изображение
                start = ind; end = ind+1; }
            // Оповещения о загруженных файлах
            if(dataArray.length == 0) {
                // Если пустой массив скрываем кнопки и всю область
                $('#upload-button').hide();
                $('#uploaded-holder').hide();
            } else if (dataArray.length == 1) {
                $('#upload-button span').html("{{ text_was_selected_one_file }}");
            } else {
                $('#upload-button span').html(dataArray.length+" {{ text_was_selected_files }}");
            }
            // Цикл для каждого элемента массива
            for (i = start; i < end; i++) {
                // размещаем загруженные изображения
                if($('#dropped-files > .review-image-preview').length <= maxFiles) {
                    $('#dropped-files').append('<div id="img-'+i+'" class="review-image-preview" style="background: url('+dataArray[i].value+'); background-size: cover;"> <a href="#" id="drop-'+i+'" class="drop-button">{{ button_delete_image }}</a></div>');
                }
            }
            return false;
        }

        // Функция удаления всех изображений
        function restartFiles() {

            // Установим бар загрузки в значение по умолчанию
            $('#loading-bar .loading-color').css({'width' : '0%'});
            $('#loading').css({'display' : 'none'});
            $('#loading-content').html(' ');

            // Удаляем все изображения на странице и скрываем кнопки
            $('#upload-button').hide();
            $('#dropped-files > .review-image-preview').remove();
            $('#uploaded-holder').hide();

            // Очищаем массив
            dataArray.length = 0;
            $('#uploadbtn').val('')
            mainImagesFiles = [];

            return false;
        }

        // Удаление только выбранного изображения
        $("#dropped-files").on("click","a[id^='drop']", function(event) {
            event.preventDefault();
            // получаем название id
            var elid = $(this).attr('id');
            // создаем массив для разделенных строк
            var temp = new Array();
            // делим строку id на 2 части
            temp = elid.split('-');
            // получаем значение после тире тоесть индекс изображения в массиве
            dataArray.splice(temp[1],1);
            mainImagesFiles.splice(temp[1],1);
            // Удаляем старые эскизы
            $('#dropped-files > .review-image-preview').remove();
            // Обновляем эскизи в соответсвии с обновленным массивом
            addImage(-1);
        });

        $('#dropped-files').delegate('.review-image-preview', 'click', function () {
            if($(this).outerWidth() === 300) {
                $(this).css('width', 600)
                $(this).css('height', 400)
            } else {
                $(this).css('width', 300)
                $(this).css('height', 200)
            }
        })

        // Удалить все изображения кнопка
        $('#dropped-files #upload-button .delete').click(restartFiles);

        // Простые стили для области перетаскивания
        $('#drop-files').on('dragenter', function() {
            $(this).css({'box-shadow' : 'inset 0px 0px 20px rgba(0, 0, 0, 0.1)', 'border' : '4px dashed #bb2b2b'});
            return false;
        });

        $('#drop-files').on('drop', function() {
            $(this).css({'box-shadow' : 'none', 'border' : '4px dashed rgba(0,0,0,0.2)'});
            return false;
        });
    });
</script>
{{ footer }} 
